# Generated by Django 4.2.7 on 2025-10-15 09:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('total_score', models.FloatField(default=0.0, verbose_name='总分')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
            ],
            options={
                'verbose_name': '答题会话',
                'verbose_name_plural': '答题会话',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50, unique=True, verbose_name='学号')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('grade', models.CharField(blank=True, max_length=50, verbose_name='年级')),
                ('class_name', models.CharField(blank=True, max_length=50, verbose_name='班级')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
                'ordering': ['student_id'],
            },
        ),
        migrations.CreateModel(
            name='TeacherOutline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('content', models.TextField(verbose_name='大纲内容')),
                ('duration_min', models.IntegerField(default=45, verbose_name='课时长度(分钟)')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20, verbose_name='难度')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建教师')),
            ],
            options={
                'verbose_name': '教学大纲',
                'verbose_name_plural': '教学大纲',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnifiedLessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='v1.0', max_length=50, verbose_name='版本号')),
                ('objectives', models.JSONField(default=list, verbose_name='教学目标')),
                ('sequence', models.JSONField(default=list, verbose_name='知识点序列')),
                ('activities', models.JSONField(default=list, verbose_name='教学活动')),
                ('checks', models.JSONField(blank=True, default=list, verbose_name='检查点')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
                ('outline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_plans', to='core.teacheroutline', verbose_name='对应大纲')),
            ],
            options={
                'verbose_name': '统一教学计划',
                'verbose_name_plural': '统一教学计划',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='题目内容')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('fill_blank', 'Fill in the Blank')], default='multiple_choice', max_length=30, verbose_name='题目类型')),
                ('options', models.JSONField(blank=True, default=list, verbose_name='选项(JSON)')),
                ('correct_answer', models.TextField(verbose_name='正确答案')),
                ('explanation', models.TextField(blank=True, verbose_name='解析')),
                ('difficulty', models.CharField(default='medium', max_length=20, verbose_name='难度')),
                ('order', models.IntegerField(default=0, verbose_name='顺序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('outline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.teacheroutline', verbose_name='所属大纲')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['outline', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PersonalizationDelta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_summary', models.JSONField(default=dict, verbose_name='班级统计')),
                ('plan_delta', models.JSONField(default=dict, verbose_name='增量方案')),
                ('student_reports', models.JSONField(default=list, verbose_name='学生个性化报告')),
                ('is_published', models.BooleanField(default=False, verbose_name='是否已发布')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.unifiedlessonplan', verbose_name='基线计划')),
                ('outline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personalizations', to='core.teacheroutline', verbose_name='对应大纲')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='审核教师')),
            ],
            options={
                'verbose_name': '个性化方案',
                'verbose_name_plural': '个性化方案',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AttemptAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_answer', models.TextField(verbose_name='学生答案')),
                ('is_correct', models.BooleanField(default=False, verbose_name='是否正确')),
                ('time_spent_sec', models.FloatField(default=0.0, verbose_name='用时(秒)')),
                ('feedback', models.TextField(blank=True, verbose_name='反馈')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='作答时间')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.attempt', verbose_name='所属会话')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.quizquestion', verbose_name='题目')),
            ],
            options={
                'verbose_name': '答题记录',
                'verbose_name_plural': '答题记录',
                'ordering': ['attempt', 'question__order'],
            },
        ),
        migrations.AddField(
            model_name='attempt',
            name='outline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='core.teacheroutline', verbose_name='对应大纲'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='core.student', verbose_name='学生'),
        ),
    ]
